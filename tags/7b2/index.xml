<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>7b2 on 老刘博客</title>
    <link>http://localhost:1313/tags/7b2/</link>
    <description>Recent content in 7b2 on 老刘博客</description>
    <image>
      <title>老刘博客</title>
      <url>http://localhost:1313/img/liujinsuiyue.jpg</url>
      <link>http://localhost:1313/img/liujinsuiyue.jpg</link>
    </image>
    <generator>Hugo -- 0.151.1</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 25 Jul 2019 00:54:22 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/7b2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>给7b2的主题加上评论回复功能</title>
      <link>http://localhost:1313/2552.html</link>
      <pubDate>Thu, 25 Jul 2019 00:54:22 +0000</pubDate>
      <guid>http://localhost:1313/2552.html</guid>
      <description>&lt;p&gt;7b2主题默认是不会给评论者回复邮件的。也曾经问过作者，作者说如果实现这个的话，没几天邮箱就被封掉了，可能作者有作者的理由吧，但是不加的话，你回复了评论者，他也不知道你给他回复了，没有个反馈，十分的不方便。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>7b2主题默认是不会给评论者回复邮件的。也曾经问过作者，作者说如果实现这个的话，没几天邮箱就被封掉了，可能作者有作者的理由吧，但是不加的话，你回复了评论者，他也不知道你给他回复了，没有个反馈，十分的不方便。</p>
<p>要想实现给评论者发邮件现在有两种方法，一种是代码实现，一种是插件实现。</p>
<h2 id="代码实现回复评论给评论者发送邮件">代码实现回复评论给评论者发送邮件</h2>
<p>修改<span style="background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);">functions.php，在文件的最后加上如下代码</span><figure class="content-img-box" id="2549"></p>
<p><img decoding="async" alt="给7b2的主题加上评论回复功能" src="https://tunan.org/wp-content/uploads/2019/07/18d4fc58dd4436.JPG" id="EB7107FF" class="po-img-big" /> <figcaption class="addDesn"></figcaption></figure></p>
<pre class="ql-syntax" spellcheck="false"><span class="hljs-comment">/* comment_mail_notify v1.0 by willin kan. (所有回复都发邮件) */</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">comment_mail_notify</span><span class="hljs-params">($comment_id)</span> </span>{
  $comment = get_comment($comment_id);
  $parent_id = $comment-&gt;comment_parent ? $comment-&gt;comment_parent : <span class="hljs-string">''</span>;
  $spam_confirmed = $comment-&gt;comment_approved;
  <span class="hljs-keyword">if</span> (($parent_id != <span class="hljs-string">''</span>) && ($spam_confirmed != <span class="hljs-string">'spam'</span>)) {
    $wp_email = <span class="hljs-string">'no-reply@'</span> . preg_replace(<span class="hljs-string">'#^www\.#'</span>, <span class="hljs-string">''</span>, strtolower($_SERVER[<span class="hljs-string">'SERVER_NAME'</span>])); <span class="hljs-comment">//e-mail 发出点, no-reply 可改为可用的 e-mail.</span>
    $to = trim(get_comment($parent_id)-&gt;comment_author_email);
    $subject = <span class="hljs-string">'您在 ['</span> . get_option(<span class="hljs-string">"blogname"</span>) . <span class="hljs-string">'] 的留言有了回复'</span>;
    $message = <span class="hljs-string">'
    &lt;div style=" border:1px solid #d8e3e8; color:#111; padding:0 15px; -moz-border-radius:5px; -webkit-border-radius:5px; -khtml-border-radius:5px;"&gt;
      &lt;p&gt;'</span> . trim(get_comment($parent_id)-&gt;comment_author) . <span class="hljs-string">', 您好!&lt;/p&gt;
      &lt;p&gt;您曾在《'</span> . get_the_title($comment-&gt;comment_post_ID) . <span class="hljs-string">'》的留言:&lt;br /&gt;'</span>
       . trim(get_comment($parent_id)-&gt;comment_content) . <span class="hljs-string">'&lt;/p&gt;
      &lt;p&gt;'</span> . trim($comment-&gt;comment_author) . <span class="hljs-string">' 给您的回复:&lt;br /&gt;'</span>
       . trim($comment-&gt;comment_content) . <span class="hljs-string">'&lt;br /&gt;&lt;/p&gt;
      &lt;p&gt;您可以点击 查看回复完整內容&lt;/p&gt;
      &lt;p&gt;欢迎再度光临 '</span> . get_option(<span class="hljs-string">'blogname'</span>) . <span class="hljs-string">'&lt;/p&gt;
      &lt;p&gt;(此邮件由系统自动发送，请勿回复.)&lt;/p&gt;
    &lt;/div&gt;'</span>;
    $from = <span class="hljs-string">"From: \""</span> . get_option(<span class="hljs-string">'blogname'</span>) . <span class="hljs-string">"\" &lt;$wp_email&gt;"</span>;
    $headers = <span class="hljs-string">"$from\nContent-Type: text/html; charset="</span> . get_option(<span class="hljs-string">'blog_charset'</span>) . <span class="hljs-string">"\n"</span>;
    wp_mail( $to, $subject, $message, $headers );
    <span class="hljs-comment">//echo 'mail to ', $to, '&lt;br/&gt; ' , $subject, $message; // for testing</span>
  }
}
add_action(<span class="hljs-string">'comment_post'</span>, <span class="hljs-string">'comment_mail_notify'</span>);
<span class="hljs-comment">// -- END ----------------------------------------</span>
</pre>
<p>﻿现在﻿，在回复评论者就会有邮件通知了。</p>
<h2 id="第二种插件的方式来实现">第二种，插件的方式来实现</h2>
<p>这里跋涉者推荐国人开发的<span style="background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);">Wenprise Better Emails插件。美化的不错，符合国人的使用习惯，最重要是的中文的，哈哈</span></p>
<p>wordpress后台点击添加插件，搜索<span style="background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);">Wenprise Better Emails，安装启用即可。</span><figure class="content-img-box" id="2550"></p>
<p><img decoding="async" alt="给7b2的主题加上评论回复功能" src="https://tunan.org/wp-content/uploads/2019/07/1503dcdd869fcc.JPG" id="F92A9BC6" class="po-img-big" /> <figcaption class="addDesn"></figcaption></figure></p>
<p>跋涉者使用的是第一种方式来实现，因为跋涉者不喜欢插件。</p>
<p>本文参考奶爸笔记的文章<a href="https://blog.naibabiji.com/archives/339" target="_blank" rel="noopener noreferrer">2019新版给WordPress添加评论邮件回复通知的方法</a>，只为给自己备忘，感谢奶爸</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
