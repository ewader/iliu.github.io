<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>外链 on 老刘博客</title>
    <link>https://iliu.org/tags/%E5%A4%96%E9%93%BE/</link>
    <description>Recent content in 外链 on 老刘博客</description>
    <image>
      <title>老刘博客</title>
      <url>https://iliu.org/img/liujinsuiyue.jpg</url>
      <link>https://iliu.org/img/liujinsuiyue.jpg</link>
    </image>
    <generator>Hugo -- 0.152.2</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 09 Jul 2019 01:20:11 +0000</lastBuildDate>
    <atom:link href="https://iliu.org/tags/%E5%A4%96%E9%93%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用cloudFlare的边缘计算workers实现外链转内链跳转</title>
      <link>https://iliu.org/2248.html</link>
      <pubDate>Tue, 09 Jul 2019 01:20:11 +0000</pubDate>
      <guid>https://iliu.org/2248.html</guid>
      <description>&lt;p&gt;跋涉者曾经分享过一篇7b2主题外链跳转的文章，那篇文章实现的原理是在自己服务器里增加一个跳转的页面代码。&lt;/p&gt;
&lt;p&gt;[zrz_insert_post id=1656]&lt;/p&gt;
&lt;p&gt;不过今天看张戈大神的一篇文章&lt;a href=&#34;https://zhang.ge/5151.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;CloudFlare边缘计算Workers尝鲜初探：博客跳转中间页&lt;/a&gt;。这篇文章谈到可以把这个跳转代码保存到cloudFlare的边缘计算workers中，从而让跳转可以在CDN里实现，显然，这样会减轻服务器计算的压力。对小水管的博客来说有一定的使用价值。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>跋涉者曾经分享过一篇7b2主题外链跳转的文章，那篇文章实现的原理是在自己服务器里增加一个跳转的页面代码。</p>
<p>[zrz_insert_post id=1656]</p>
<p>不过今天看张戈大神的一篇文章<a href="https://zhang.ge/5151.html" target="_blank" rel="noopener noreferrer">CloudFlare边缘计算Workers尝鲜初探：博客跳转中间页</a>。这篇文章谈到可以把这个跳转代码保存到cloudFlare的边缘计算workers中，从而让跳转可以在CDN里实现，显然，这样会减轻服务器计算的压力。对小水管的博客来说有一定的使用价值。</p>
<h2 id="首先你的网站要使用cloudflare这个cdn加速">首先，你的网站要使用cloudFlare这个cdn加速。</h2>
<p>由于国内的网络情况，直接使用往往比较卡，不过好在张戈大神折腾出了另外一个套路，使用后感觉还不错。有兴趣的朋友可以去他的网站上参考。本文不做详细的叙述。</p>
<h2 id="第二把代码添加到cloudflare的边缘计算workers中">第二，把代码添加到cloudFlare的边缘计算workers中</h2>
<p>步骤如下：</p>
<ul>
<li><span style="background-color: rgb(255, 255, 255); color: rgb(101, 116, 135);">打开CF域名控制面板，如图1点击切换到Workers选项卡；</span></li>
<li><span style="background-color: rgb(255, 255, 255); color: rgb(101, 116, 135);">点击【Launch Editor】按钮进入Workers编辑界面后，点击【Add script】输入脚本名称并保存，如图：</span><figure class="content-img-box" id="2245"></li>
</ul>
<p><img decoding="async" alt="利用cloudFlare的边缘计算workers实现外链转内链跳转" src="https://tunan.org/wp-content/uploads/2019/07/10edf85dd62035.jpg" id="36AE1719" class="po-img-big" /> <figcaption class="addDesn"></figcaption></figure></p>
<ul>
<li>把如下代码放入代码编辑框中，此代码来自<a href="https://zhang.ge/5151.html" target="_blank" rel="noopener noreferrer">张戈博客</a>.并点击save。</li>
</ul>
<pre class="ql-syntax" spellcheck="false">addEventListener('fetch', event =&gt; {
  event.respondWith(handleRequest(event.request))
})
 
/**
 * Fetch and log a request
 * @param {Request} request
 */
html = `<span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"zh-CN"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"Content-Type"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"text/html; charset=UTF-8"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"viewport"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"renderer"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"webkit"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"Cache-Control"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"no-transform"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">"Cache-Control"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"no-siteapp"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"robots"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"noindex, nofollow"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"applicable-device"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"pc,mobile"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"HandheldFriendly"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"true"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"description"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"跳转页面"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"keywords"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"跳转页面"</span> /&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-keyword">var</span> base64EncodeChars=<span class="hljs-string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span>;<span class="hljs-keyword">var</span> base64DecodeChars=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">62</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">63</span>,<span class="hljs-number">52</span>,<span class="hljs-number">53</span>,<span class="hljs-number">54</span>,<span class="hljs-number">55</span>,<span class="hljs-number">56</span>,<span class="hljs-number">57</span>,<span class="hljs-number">58</span>,<span class="hljs-number">59</span>,<span class="hljs-number">60</span>,<span class="hljs-number">61</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number"></span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">24</span>,<span class="hljs-number">25</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">26</span>,<span class="hljs-number">27</span>,<span class="hljs-number">28</span>,<span class="hljs-number">29</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">32</span>,<span class="hljs-number">33</span>,<span class="hljs-number">34</span>,<span class="hljs-number">35</span>,<span class="hljs-number">36</span>,<span class="hljs-number">37</span>,<span class="hljs-number">38</span>,<span class="hljs-number">39</span>,<span class="hljs-number">40</span>,<span class="hljs-number">41</span>,<span class="hljs-number">42</span>,<span class="hljs-number">43</span>,<span class="hljs-number">44</span>,<span class="hljs-number">45</span>,<span class="hljs-number">46</span>,<span class="hljs-number">47</span>,<span class="hljs-number">48</span>,<span class="hljs-number">49</span>,<span class="hljs-number">50</span>,<span class="hljs-number">51</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>);<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">base64encode</span>(<span class="hljs-params">str</span>)</span>{<span class="hljs-keyword">var</span> out,i,len;<span class="hljs-keyword">var</span> c1,c2,c3;len=str.length;i=<span class="hljs-number"></span>;out=<span class="hljs-string">""</span>;<span class="hljs-keyword">while</span>(i&lt;len){c1=str.charCodeAt(i++)&<span class="hljs-number">255</span>;<span class="hljs-keyword">if</span>(i==len){out+=base64EncodeChars.charAt(c1&gt;&gt;<span class="hljs-number">2</span>);out+=base64EncodeChars.charAt((c1&<span class="hljs-number">3</span>)&lt;&lt;<span class="hljs-number">4</span>);out+=<span class="hljs-string">"=="</span>;<span class="hljs-keyword">break</span>}c2=str.charCodeAt(i++);<span class="hljs-keyword">if</span>(i==len){out+=base64EncodeChars.charAt(c1&gt;&gt;<span class="hljs-number">2</span>);out+=base64EncodeChars.charAt(((c1&<span class="hljs-number">3</span>)&lt;&lt;<span class="hljs-number">4</span>)|((c2&<span class="hljs-number">240</span>)&gt;&gt;<span class="hljs-number">4</span>));out+=base64EncodeChars.charAt((c2&<span class="hljs-number">15</span>)&lt;&lt;<span class="hljs-number">2</span>);out+=<span class="hljs-string">"="</span>;<span class="hljs-keyword">break</span>}c3=str.charCodeAt(i++);out+=base64EncodeChars.charAt(c1&gt;&gt;<span class="hljs-number">2</span>);out+=base64EncodeChars.charAt(((c1&<span class="hljs-number">3</span>)&lt;&lt;<span class="hljs-number">4</span>)|((c2&<span class="hljs-number">240</span>)&gt;&gt;<span class="hljs-number">4</span>));out+=base64EncodeChars.charAt(((c2&<span class="hljs-number">15</span>)&lt;&lt;<span class="hljs-number">2</span>)|((c3&<span class="hljs-number">192</span>)&gt;&gt;<span class="hljs-number">6</span>));out+=base64EncodeChars.charAt(c3&<span class="hljs-number">63</span>)}<span class="hljs-keyword">return</span> out}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">base64decode</span>(<span class="hljs-params">str</span>)</span>{<span class="hljs-keyword">var</span> c1,c2,c3,c4;<span class="hljs-keyword">var</span> i,len,out;len=str.length;i=<span class="hljs-number"></span>;out=<span class="hljs-string">""</span>;<span class="hljs-keyword">while</span>(i&lt;len){<span class="hljs-keyword">do</span>{c1=base64DecodeChars[str.charCodeAt(i++)&<span class="hljs-number">255</span>]}<span class="hljs-keyword">while</span>(i&lt;len&&c1==<span class="hljs-number">-1</span>);<span class="hljs-keyword">if</span>(c1==<span class="hljs-number">-1</span>){<span class="hljs-keyword">break</span>}<span class="hljs-keyword">do</span>{c2=base64DecodeChars[str.charCodeAt(i++)&<span class="hljs-number">255</span>]}<span class="hljs-keyword">while</span>(i&lt;len&&c2==<span class="hljs-number">-1</span>);<span class="hljs-keyword">if</span>(c2==<span class="hljs-number">-1</span>){<span class="hljs-keyword">break</span>}out+=<span class="hljs-built_in">String</span>.fromCharCode((c1&lt;&lt;<span class="hljs-number">2</span>)|((c2&<span class="hljs-number">48</span>)&gt;&gt;<span class="hljs-number">4</span>));<span class="hljs-keyword">do</span>{c3=str.charCodeAt(i++)&<span class="hljs-number">255</span>;<span class="hljs-keyword">if</span>(c3==<span class="hljs-number">61</span>){<span class="hljs-keyword">return</span> out}c3=base64DecodeChars[c3]}<span class="hljs-keyword">while</span>(i&lt;len&&c3==<span class="hljs-number">-1</span>);<span class="hljs-keyword">if</span>(c3==<span class="hljs-number">-1</span>){<span class="hljs-keyword">break</span>}out+=<span class="hljs-built_in">String</span>.fromCharCode(((c2&<span class="hljs-number">15</span>)&lt;&lt;<span class="hljs-number">4</span>)|((c3&<span class="hljs-number">60</span>)&gt;&gt;<span class="hljs-number">2</span>));<span class="hljs-keyword">do</span>{c4=str.charCodeAt(i++)&<span class="hljs-number">255</span>;<span class="hljs-keyword">if</span>(c4==<span class="hljs-number">61</span>){<span class="hljs-keyword">return</span> out}c4=base64DecodeChars[c4]}<span class="hljs-keyword">while</span>(i&lt;len&&c4==<span class="hljs-number">-1</span>);<span class="hljs-keyword">if</span>(c4==<span class="hljs-number">-1</span>){<span class="hljs-keyword">break</span>}out+=<span class="hljs-built_in">String</span>.fromCharCode(((c3&<span class="hljs-number">3</span>)&lt;&lt;<span class="hljs-number">6</span>)|c4)}<span class="hljs-keyword">return</span> out}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">utf16to8</span>(<span class="hljs-params">str</span>)</span>{<span class="hljs-keyword">var</span> out,i,len,c;out=<span class="hljs-string">""</span>;len=str.length;<span class="hljs-keyword">for</span>(i=<span class="hljs-number"></span>;i&lt;len;i++){c=str.charCodeAt(i);<span class="hljs-keyword">if</span>((c&gt;=<span class="hljs-number">1</span>)&&(c&lt;=<span class="hljs-number">127</span>)){out+=str.charAt(i)}<span class="hljs-keyword">else</span>{<span class="hljs-keyword">if</span>(c&gt;<span class="hljs-number">2047</span>){out+=<span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">224</span>|((c&gt;&gt;<span class="hljs-number">12</span>)&<span class="hljs-number">15</span>));out+=<span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">128</span>|((c&gt;&gt;<span class="hljs-number">6</span>)&<span class="hljs-number">63</span>));out+=<span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">128</span>|((c&gt;&gt;<span class="hljs-number"></span>)&<span class="hljs-number">63</span>))}<span class="hljs-keyword">else</span>{out+=<span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">192</span>|((c&gt;&gt;<span class="hljs-number">6</span>)&<span class="hljs-number">31</span>));out+=<span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">128</span>|((c&gt;&gt;<span class="hljs-number"></span>)&<span class="hljs-number">63</span>))}}}<span class="hljs-keyword">return</span> out}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">utf8to16</span>(<span class="hljs-params">str</span>)</span>{<span class="hljs-keyword">var</span> out,i,len,c;<span class="hljs-keyword">var</span> char2,char3;out=<span class="hljs-string">""</span>;len=str.length;i=<span class="hljs-number"></span>;<span class="hljs-keyword">while</span>(i&lt;len){c=str.charCodeAt(i++);<span class="hljs-keyword">switch</span>(c&gt;&gt;<span class="hljs-number">4</span>){<span class="hljs-keyword">case</span> <span class="hljs-number"></span>:<span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:out+=str.charAt(i<span class="hljs-number">-1</span>);<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:<span class="hljs-keyword">case</span> <span class="hljs-number">13</span>:char2=str.charCodeAt(i++);out+=<span class="hljs-built_in">String</span>.fromCharCode(((c&<span class="hljs-number">31</span>)&lt;&lt;<span class="hljs-number">6</span>)|(char2&<span class="hljs-number">63</span>));<span class="hljs-keyword">break</span>;<span class="hljs-keyword">case</span> <span class="hljs-number">14</span>:char2=str.charCodeAt(i++);char3=str.charCodeAt(i++);out+=<span class="hljs-built_in">String</span>.fromCharCode(((c&<span class="hljs-number">15</span>)&lt;&lt;<span class="hljs-number">12</span>)|((char2&<span class="hljs-number">63</span>)&lt;&lt;<span class="hljs-number">6</span>)|((char3&<span class="hljs-number">63</span>)&lt;&lt;<span class="hljs-number"></span>));<span class="hljs-keyword">break</span>}}<span class="hljs-keyword">return</span> out}<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">doit</span>()</span>{<span class="hljs-keyword">var</span> f=<span class="hljs-built_in">document</span>.f;f.output.value=base64encode(utf16to8(f.source.value));f.decode.value=utf8to16(base64decode(f.output.value))};
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetQueryString</span>(<span class="hljs-params">name</span>)
</span>{
     <span class="hljs-keyword">var</span> reg = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">"(^|&)"</span>+ name +<span class="hljs-string">"=(.*)$"</span>);
     <span class="hljs-keyword">var</span> r = <span class="hljs-built_in">window</span>.location.search.substr(<span class="hljs-number">1</span>).match(reg);
     <span class="hljs-keyword">if</span>(r!=<span class="hljs-literal">null</span>) { 
         <span class="hljs-keyword">return</span>  <span class="hljs-built_in">unescape</span>(r[<span class="hljs-number">2</span>]);
     } <span class="hljs-keyword">else</span> {
         <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.location.pathname.replace(<span class="hljs-string">"/goto/"</span>,<span class="hljs-string">""</span>); <span class="hljs-comment">//注意代码中的/goto/和跳转地址/goto/保持一致，请记得自行修改！</span>
     }
}
jump_url = GetQueryString(<span class="hljs-string">"url"</span>);
<span class="hljs-comment">// 若传入的是base加密数据，则进行解密处理</span>
<span class="hljs-keyword">if</span>( jump_url == base64encode(base64decode(jump_url))) {
    jump_url = base64decode(jump_url);
}
<span class="hljs-comment">// 自定义一些特殊字符串的跳转，请根据实际需求自行发挥，比如：</span>
<span class="hljs-comment">// 访问 "/goto/baidu" 会跳转到百度首页：</span>
<span class="hljs-keyword">if</span>(jump_url==<span class="hljs-string">"baidu"</span>) {
   jump_url=<span class="hljs-string">"https://www.baidu.com/"</span>;
}
<span class="hljs-comment">// 访问 "/goto/cf" 会跳转到cloudflare首页：</span>
<span class="hljs-keyword">if</span>(jump_url==<span class="hljs-string">"cf"</span>) {
   jump_url=<span class="hljs-string">"https://www.cloudflare.com/"</span>;
}
<span class="hljs-comment">// 网址校验</span>
<span class="hljs-keyword">var</span> UrlReg = <span class="hljs-string">"^((http|https|thunder|qqdl|ed2k|Flashget|qbrowser|ftp|rtsp|mms)://)"</span>;
<span class="hljs-keyword">if</span>(jump_url == <span class="hljs-literal">null</span> || jump_url.toString().length&lt;<span class="hljs-number">1</span> || !jump_url.match(UrlReg)) {
    <span class="hljs-built_in">document</span>.title = <span class="hljs-string">"参数错误，正在返回首页..."</span>;
    jump_url = location.origin;
}
<span class="hljs-comment">// 延时执行跳转</span>
setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">link_jump</span>()
</span>{   
<span class="hljs-comment">// 防止盗用，但是微信等客户端无法取得referrer，因此这里允许了referrer为空的访问，请自行修改zhang.ge为自己的域名</span>
  <span class="hljs-keyword">var</span> MyHOST = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">"ewader\.com"</span>);
  <span class="hljs-keyword">if</span> (!MyHOST.test(<span class="hljs-built_in">document</span>.referrer) && <span class="hljs-built_in">document</span>.referrer.length ) {
      alert(<span class="hljs-string">"请不要盗用本站跳转页面！"</span>);
      location.href = <span class="hljs-string">"https://tunan.org/"</span>;
      <span class="hljs-keyword">return</span>;
  }
  location.href = jump_url;
},<span class="hljs-number">1000</span>);
setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>()</span>{<span class="hljs-built_in">window</span>.opener=<span class="hljs-literal">null</span>;<span class="hljs-built_in">window</span>.close();}, <span class="hljs-number">50000</span>);
<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>页面加载中，请稍候...<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span>
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{<span class="hljs-attribute">margin</span>:<span class="hljs-number"></span>;<span class="hljs-attribute">padding</span>:<span class="hljs-number"></span>;<span class="hljs-attribute">border</span>:<span class="hljs-number"></span>;<span class="hljs-attribute">font-size</span>:<span class="hljs-number">100%</span>;<span class="hljs-attribute">font</span>:inherit;<span class="hljs-attribute">vertical-align</span>:baseline}body{<span class="hljs-attribute">background</span>:<span class="hljs-number">#3498db</span>}#loader-container{<span class="hljs-attribute">width</span>:<span class="hljs-number">188px</span>;<span class="hljs-attribute">height</span>:<span class="hljs-number">188px</span>;<span class="hljs-attribute">color</span>:<span class="hljs-number">#fff</span>;<span class="hljs-attribute">margin</span>:<span class="hljs-number"></span> auto;<span class="hljs-attribute">position</span>:absolute;<span class="hljs-attribute">top</span>:<span class="hljs-number">50%</span>;<span class="hljs-attribute">left</span>:<span class="hljs-number">50%</span>;<span class="hljs-attribute">margin-right</span>:-<span class="hljs-number">50%</span>;<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">translate</span>(-50%,-50%);<span class="hljs-attribute">border</span>:<span class="hljs-number">5px</span> solid <span class="hljs-number">#3498db</span>;<span class="hljs-attribute">border-radius</span>:<span class="hljs-number">50%</span>;<span class="hljs-attribute">-webkit-animation</span>:borderScale <span class="hljs-number">1s</span> infinite ease-in-out;<span class="hljs-attribute">animation</span>:borderScale <span class="hljs-number">1s</span> infinite ease-in-out}#loadingText{<span class="hljs-attribute">font-family</span>:<span class="hljs-string">"Microsoft YaHei"</span>,Helvetica,Arial,Lucida Grande,Tahoma,sans-serif,Raleway,sans-serif;<span class="hljs-attribute">font-size</span>:<span class="hljs-number">1.4em</span>;<span class="hljs-attribute">position</span>:absolute;<span class="hljs-attribute">top</span>:<span class="hljs-number">50%</span>;<span class="hljs-attribute">left</span>:<span class="hljs-number">50%</span>;<span class="hljs-attribute">margin-right</span>:-<span class="hljs-number">50%</span>;<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">translate</span>(-50%,-50%)}@-<span class="hljs-keyword">webkit</span>-<span class="hljs-keyword">keyframes</span> borderScale{0%{<span class="hljs-attribute">border</span>:<span class="hljs-number">5px</span> solid <span class="hljs-number">#fff</span>}50%{<span class="hljs-attribute">border</span>:<span class="hljs-number">25px</span> solid <span class="hljs-number">#3498db</span>}100%{<span class="hljs-attribute">border</span>:<span class="hljs-number">5px</span> solid <span class="hljs-number">#fff</span>}}@<span class="hljs-keyword">keyframes</span> borderScale{0%{<span class="hljs-attribute">border</span>:<span class="hljs-number">5px</span> solid <span class="hljs-number">#fff</span>}50%{<span class="hljs-attribute">border</span>:<span class="hljs-number">25px</span> solid <span class="hljs-number">#3498db</span>}100%{<span class="hljs-attribute">border</span>:<span class="hljs-number">5px</span> solid <span class="hljs-number">#fff</span>}}
<span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"loader-container"</span>&gt;&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"loadingText"</span>&gt;</span>页面加载中...<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>`
//console.log(html)
async function handleRequest(request) {
  const newResponse = new Response(html)
  newResponse.headers.set('Content-Type', 'text/html');
  return newResponse
}
</pre>
<ul>
<li><span style="background-color: rgb(255, 255, 255); color: rgb(101, 116, 135);">点击【routers】按钮切到路由编辑界面，点击【Add router】后如图添加路由：点击save</span><figure class="content-img-box" id="2247"></li>
</ul>
<p><img decoding="async" alt="利用cloudFlare的边缘计算workers实现外链转内链跳转" src="https://tunan.org/wp-content/uploads/2019/07/145ebbde81352c.jpg" id="6AC9949F" class="po-img-big" /> <figcaption class="addDesn"></figcaption></figure></p>
<p>至此，已经大功告成，想看效果的可以点击上面的外链，值得说明的一点是，cloudFlare的边缘计算workers是收费服务，不过每天有免费10w的请求数量，对我们这个小博客来说，是非常非常的够用了。</p>
<p>如果，你也在使用<span style="background-color: rgb(255, 255, 255); color: rgb(51, 51, 51);">cloudFlare，不妨也可以用用这个玩意，毕竟充分利用外部资源是我等小博主追求的目标哈。</span></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
